import{cloneDeep as e}from"lodash";function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&(e[s]=i[s])}return e},t.apply(this,arguments)}var i,s="object"==typeof Reflect?Reflect:null,n=s&&"function"==typeof s.apply?s.apply:function(e,t,i){return Function.prototype.apply.call(e,t,i)};i=s&&"function"==typeof s.ownKeys?s.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var a=Number.isNaN||function(e){return e!=e};function r(){r.init.call(this)}var o=r;r.EventEmitter=r,r.prototype._events=void 0,r.prototype._eventsCount=0,r.prototype._maxListeners=void 0;var h=10;function l(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function m(e){return void 0===e._maxListeners?r.defaultMaxListeners:e._maxListeners}function d(e,t,i,s){var n,a,r;if(l(i),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,i.listener?i.listener:i),a=e._events),r=a[t]),void 0===r)r=a[t]=i,++e._eventsCount;else if("function"==typeof r?r=a[t]=s?[i,r]:[r,i]:s?r.unshift(i):r.push(i),(n=m(e))>0&&r.length>n&&!r.warned){r.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+r.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=e,o.type=t,o.count=r.length,console&&console.warn&&console.warn(o)}return e}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function u(e,t,i){var s={fired:!1,wrapFn:void 0,target:e,type:t,listener:i},n=c.bind(s);return n.listener=i,s.wrapFn=n,n}function g(e,t,i){var s=e._events;if(void 0===s)return[];var n=s[t];return void 0===n?[]:"function"==typeof n?i?[n.listener||n]:[n]:i?function(e){for(var t=new Array(e.length),i=0;i<t.length;++i)t[i]=e[i].listener||e[i];return t}(n):f(n,n.length)}function p(e){var t=this._events;if(void 0!==t){var i=t[e];if("function"==typeof i)return 1;if(void 0!==i)return i.length}return 0}function f(e,t){for(var i=new Array(t),s=0;s<t;++s)i[s]=e[s];return i}function v(e,t,i,s){if("function"==typeof e.on)s.once?e.once(t,i):e.on(t,i);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,function n(a){s.once&&e.removeEventListener(t,n),i(a)})}}function k(e,t=0,i=10,s=!1){if("number"==typeof e)return isNaN(e)?t:e;let n;try{n=s?parseFloat(e):parseInt(e,i),isNaN(n)&&(n=t)}catch(e){n=t}return n}Object.defineProperty(r,"defaultMaxListeners",{enumerable:!0,get:function(){return h},set:function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");h=e}}),r.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},r.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},r.prototype.getMaxListeners=function(){return m(this)},r.prototype.emit=function(e){for(var t=[],i=1;i<arguments.length;i++)t.push(arguments[i]);var s="error"===e,a=this._events;if(void 0!==a)s=s&&void 0===a.error;else if(!s)return!1;if(s){var r;if(t.length>0&&(r=t[0]),r instanceof Error)throw r;var o=new Error("Unhandled error."+(r?" ("+r.message+")":""));throw o.context=r,o}var h=a[e];if(void 0===h)return!1;if("function"==typeof h)n(h,this,t);else{var l=h.length,m=f(h,l);for(i=0;i<l;++i)n(m[i],this,t)}return!0},r.prototype.on=r.prototype.addListener=function(e,t){return d(this,e,t,!1)},r.prototype.prependListener=function(e,t){return d(this,e,t,!0)},r.prototype.once=function(e,t){return l(t),this.on(e,u(this,e,t)),this},r.prototype.prependOnceListener=function(e,t){return l(t),this.prependListener(e,u(this,e,t)),this},r.prototype.off=r.prototype.removeListener=function(e,t){var i,s,n,a,r;if(l(t),void 0===(s=this._events))return this;if(void 0===(i=s[e]))return this;if(i===t||i.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,i.listener||t));else if("function"!=typeof i){for(n=-1,a=i.length-1;a>=0;a--)if(i[a]===t||i[a].listener===t){r=i[a].listener,n=a;break}if(n<0)return this;0===n?i.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(i,n),1===i.length&&(s[e]=i[0]),void 0!==s.removeListener&&this.emit("removeListener",e,r||t)}return this},r.prototype.removeAllListeners=function(e){var t,i,s;if(void 0===(i=this._events))return this;if(void 0===i.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==i[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete i[e]),this;if(0===arguments.length){var n,a=Object.keys(i);for(s=0;s<a.length;++s)"removeListener"!==(n=a[s])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=i[e]))this.removeListener(e,t);else if(void 0!==t)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this},r.prototype.listeners=function(e){return g(this,e,!0)},r.prototype.rawListeners=function(e){return g(this,e,!1)},r.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):p.call(e,t)},r.prototype.listenerCount=p,r.prototype.eventNames=function(){return this._eventsCount>0?i(this._events):[]},o.once=function(e,t){return new Promise(function(i,s){function n(i){e.removeListener(t,a),s(i)}function a(){"function"==typeof e.removeListener&&e.removeListener("error",n),i([].slice.call(arguments))}v(e,t,a,{once:!0}),"error"!==t&&function(e,t,i){"function"==typeof e.on&&v(e,"error",t,{once:!0})}(e,n)})};class T{constructor(e){this.lineSplit=void 0,this.timestamp=void 0,this.lineSplit=e,this.timestamp=new Date(this.lineSplit[1])}}class _ extends T{constructor(e){super(e),this.message=void 0,this.message=this.lineSplit[2]}}class I extends T{constructor(e){super(e),this.phaseCode=void 0,this.phaseCode=k(e[2])}}class y extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.classId=void 0,this.class=void 0,this.gearScore=void 0,this.currentHp=void 0,this.maxHp=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.classId=k(e[4]),this.class=e[5]||"UnknownClass",this.gearScore=k(e[7],0,10,!0),this.currentHp=k(e[8]),this.maxHp=k(e[9])}}class L extends T{constructor(e){super(e),this.id=void 0,this.npcId=void 0,this.name=void 0,this.currentHp=void 0,this.maxHp=void 0,this.id=e[2],this.npcId=k(e[3]),this.name=e[4]||"Unknown Entity",this.currentHp=k(e[5]),this.maxHp=k(e[6])}}class A extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.killerId=void 0,this.killerName=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.killerId=e[4],this.killerName=e[5]||"Unknown Entity"}}class N extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.skillId=void 0,this.skillName=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.skillId=k(e[4]),this.skillName=e[5]||"Unknown Skill"}}class b extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.skillId=void 0,this.skillName=void 0,this.skillStage=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.skillId=e[4],this.skillName=e[5]||"Unknown Skill",this.skillStage=k(e[6])}}class H extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.skillId=void 0,this.skillName=void 0,this.skillEffectId=void 0,this.skillEffect=void 0,this.targetId=void 0,this.targetName=void 0,this.damage=void 0,this.damageModifier=void 0,this.currentHp=void 0,this.maxHp=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.skillId=k(e[4]),this.skillName=e[5]||"Unknown Skill",this.skillEffectId=k(e[6]),this.skillEffect=e[7],this.targetId=e[8],this.targetName=e[9]||"Unknown Entity",this.damage=k(e[10]),this.damageModifier=k(e[11],0,16),this.currentHp=k(e[12]),this.maxHp=k(e[13])}}class E extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.healAmount=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.healAmount=k(e[4])}}class D extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.buffId=void 0,this.buffName=void 0,this.isNew=void 0,this.sourceId=void 0,this.sourceName=void 0,this.shieldAmount=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.buffId=e[4],this.buffName=e[5],this.isNew="1"==e[6],this.sourceId=e[7],this.sourceName=e[8]||"Unknown Entity",this.shieldAmount=k(e[9])}}class O extends T{constructor(e){super(e),this.id=void 0,this.name=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity"}}const S={"Serenade of Salvation":{duration:3},"Holy Aura":{duration:16e3},"Holy Protection":{duration:7e3},Demonize:{duration:1500}};var w,C;!function(e){e[e.HIT_OPTION_NONE=-1]="HIT_OPTION_NONE",e[e.HIT_OPTION_BACK_ATTACK=0]="HIT_OPTION_BACK_ATTACK",e[e.HIT_OPTION_FRONTAL_ATTACK=1]="HIT_OPTION_FRONTAL_ATTACK",e[e.HIT_OPTION_FLANK_ATTACK=2]="HIT_OPTION_FLANK_ATTACK",e[e.HIT_OPTION_MAX=3]="HIT_OPTION_MAX"}(w||(w={})),function(e){e[e.HIT_FLAG_NORMAL=0]="HIT_FLAG_NORMAL",e[e.HIT_FLAG_CRITICAL=1]="HIT_FLAG_CRITICAL",e[e.HIT_FLAG_MISS=2]="HIT_FLAG_MISS",e[e.HIT_FLAG_INVINCIBLE=3]="HIT_FLAG_INVINCIBLE",e[e.HIT_FLAG_DOT=4]="HIT_FLAG_DOT",e[e.HIT_FLAG_IMMUNE=5]="HIT_FLAG_IMMUNE",e[e.HIT_FLAG_IMMUNE_SILENCED=6]="HIT_FLAG_IMMUNE_SILENCED",e[e.HIT_FLAG_FONT_SILENCED=7]="HIT_FLAG_FONT_SILENCED",e[e.HIT_FLAG_DOT_CRITICAL=8]="HIT_FLAG_DOT_CRITICAL",e[e.HIT_FLAG_DODGE=9]="HIT_FLAG_DODGE",e[e.HIT_FLAG_REFLECT=10]="HIT_FLAG_REFLECT",e[e.HIT_FLAG_DAMAGE_SHARE=11]="HIT_FLAG_DAMAGE_SHARE",e[e.HIT_FLAG_DODGE_HIT=12]="HIT_FLAG_DODGE_HIT",e[e.HIT_FLAG_MAX=13]="HIT_FLAG_MAX"}(C||(C={}));class x extends o.EventEmitter{constructor(e=!1){super(),this.resetTimer=void 0,this.debugLines=void 0,this.isLive=void 0,this.dontResetOnZoneChange=void 0,this.resetAfterPhaseTransition=void 0,this.splitOnPhaseTransition=void 0,this.removeOverkillDamage=void 0,this.phaseTransitionResetRequest=void 0,this.phaseTransitionResetRequestTime=void 0,this.game=void 0,this.encounters=void 0,this.healSources=void 0,this.resetTimer=null,this.debugLines=!1,this.isLive=e,this.dontResetOnZoneChange=!1,this.resetAfterPhaseTransition=!1,this.splitOnPhaseTransition=!1,this.removeOverkillDamage=!0,this.phaseTransitionResetRequest=!1,this.phaseTransitionResetRequestTime=0,this.resetState(),this.encounters=[],this.isLive&&setInterval(this.broadcastStateChange.bind(this),100)}resetState(){this.debugLines&&this.emit("log",{type:"debug",message:"Resetting state"});const t=e(this.game),i=+new Date;this.game={startedOn:i,lastCombatPacket:i,fightStartedOn:0,entities:{},damageStatistics:{totalDamageDealt:0,topDamageDealt:0,totalDamageTaken:0,topDamageTaken:0,totalHealingDone:0,topHealingDone:0,totalShieldDone:0,topShieldDone:0}},this.healSources=[],this.emit("reset-state",t)}softReset(){this.resetTimer=null;const t=e(this.game.entities);this.resetState();for(const e of Object.keys(t))+new Date-t[e].lastUpdate>6e5||this.updateEntity(t[e].name,{name:t[e].name,npcId:t[e].npcId,class:t[e].class,classId:t[e].classId,isPlayer:t[e].isPlayer,gearScore:t[e].gearScore,maxHp:t[e].maxHp,currentHp:t[e].currentHp})}cancelReset(){this.resetTimer&&clearTimeout(this.resetTimer),this.resetTimer=null}splitEncounter(){const t=e(this.game);0==t.fightStartedOn||0==t.damageStatistics.totalDamageDealt&&!t.damageStatistics.totalDamageTaken||this.encounters.push(t),this.resetState()}broadcastStateChange(){const t=e(this.game);Object.values(t.entities).forEach(e=>{Object.values(e.skills).forEach(e=>{e.breakdown=[]})}),this.emit("state-change",t)}parseLogLine(e){if(!e)return;const t=e.trim().split("|");if(t.length<1||!t[0])return;const i=k(t[0]);try{switch(i){case 0:this.onMessage(t);break;case 1:this.onInitEnv();break;case 2:this.onPhaseTransition(t);break;case 3:this.onNewPc(t);break;case 4:this.onNewNpc(t);break;case 5:this.onDeath(t);break;case 6:this.onSkillStart(t);break;case 7:this.onSkillStage(t);break;case 8:this.onDamage(t);break;case 9:this.onHeal(t);break;case 10:this.onBuff(t);break;case 12:this.onCounterattack(t)}}catch(e){this.emit("log",{type:"error",message:e})}}updateEntity(e,i){const s={},n=this.game.entities[e];!i.currentHp||n&&i.currentHp===n.currentHp||(s.lastUpdate=+new Date),this.game.entities[e]=t({},n||{lastUpdate:0,id:"",npcId:0,name:"",class:"",classId:0,isPlayer:!1,isDead:!1,deaths:0,deathTime:0,gearScore:0,currentHp:0,maxHp:0,damageDealt:0,healingDone:0,shieldDone:0,damageTaken:0,skills:{},hits:{casts:0,total:0,crit:0,backAttack:0,frontAttack:0,counter:0}},i,s)}onMessage(e){const t=new _(e);this.debugLines&&this.emit("log",{type:"debug",message:`onMessage: ${t.message}`}),t.message.startsWith("Arguments:")||this.emit("message",t.message)}onInitEnv(){this.debugLines&&this.emit("log",{type:"debug",message:"onInitEnv"}),this.isLive?!1===this.dontResetOnZoneChange&&null==this.resetTimer&&(this.debugLines&&this.emit("log",{type:"debug",message:"Setting a reset timer"}),this.resetTimer=setTimeout(this.softReset.bind(this),6e3),this.emit("message","new-zone")):(this.splitEncounter(),this.emit("message","new-zone"))}onPhaseTransition(e){const t=new I(e);this.debugLines&&this.emit("log",{type:"debug",message:`onPhaseTransition: ${t.phaseCode}`}),this.isLive&&(this.emit("message",`phase-transition-${t.phaseCode}`),this.resetAfterPhaseTransition&&(this.phaseTransitionResetRequest=!0,this.phaseTransitionResetRequestTime=+new Date)),!this.isLive&&this.splitOnPhaseTransition&&this.splitEncounter()}onNewPc(e){const i=new y(e);this.debugLines&&this.emit("log",{type:"debug",message:`onNewPc: ${i.id}, ${i.name}, ${i.classId}, ${i.class}, ${i.gearScore}, ${i.currentHp}, ${i.maxHp}`}),this.updateEntity(i.name,t({id:i.id,name:i.name,class:i.class,classId:i.classId,isPlayer:!0},i.gearScore&&0!=i.gearScore&&{gearScore:i.gearScore},{currentHp:i.currentHp,maxHp:i.maxHp}))}onNewNpc(e){const t=new L(e);this.debugLines&&this.emit("log",{type:"debug",message:`onNewNpc: ${t.id}, ${t.name}, ${t.currentHp}, ${t.maxHp}`}),this.updateEntity(t.name,{id:t.id,name:t.name,npcId:t.npcId,isPlayer:!1,currentHp:t.currentHp,maxHp:t.maxHp})}onDeath(e){const t=new A(e);this.debugLines&&this.emit("log",{type:"debug",message:`onDeath: ${t.name} ${t.killerName}`});const i=this.game.entities[t.name];let s=0;s=i?i.isDead?i.deaths:i.deaths+1:1,this.updateEntity(t.name,{name:t.name,isDead:!0,deathTime:+t.timestamp,deaths:s})}onSkillStart(e){const i=new N(e);this.debugLines&&this.emit("log",{type:"debug",message:`onSkillStart: ${i.id}, ${i.name}, ${i.skillId}, ${i.skillName}`}),Object.keys(S).includes(i.skillName)&&this.healSources.push({source:i.name,expires:+i.timestamp+S[i.skillName].duration}),this.updateEntity(i.name,{name:i.name,isDead:!1});const s=this.game.entities[i.name];s&&(s.hits.casts+=1,i.skillName in s.skills||(s.skills[i.skillName]=t({},{id:0,name:"",totalDamage:0,maxDamage:0,hits:{casts:0,total:0,crit:0,backAttack:0,frontAttack:0,counter:0},breakdown:[]},{id:i.skillId,name:i.skillName}),s.skills[i.skillName].hits.casts+=1))}onSkillStage(e){const t=new b(e);this.debugLines&&this.emit("log",{type:"debug",message:`onSkillStage: ${t.name}, ${t.skillId}, ${t.skillName}, ${t.skillStage}`})}onDamage(e){if(e.length<13)return;const i=new H(e);this.debugLines&&this.emit("log",{type:"debug",message:`onDamage: ${i.id}, ${i.name}, ${i.skillId}, ${i.skillName}, ${i.skillEffectId}, ${i.skillEffect}, ${i.targetId}, ${i.targetName}, ${i.damage}, ${i.currentHp}, ${i.maxHp}`}),this.phaseTransitionResetRequest&&this.phaseTransitionResetRequestTime>0&&this.phaseTransitionResetRequestTime<+new Date-1500&&(this.softReset(),this.phaseTransitionResetRequest=!1),this.updateEntity(i.name,{id:i.id,name:i.name}),this.updateEntity(i.targetName,{id:i.targetId,name:i.targetName,currentHp:i.currentHp,maxHp:i.maxHp});const s=this.game.entities[i.name],n=this.game.entities[i.targetName];!n.isPlayer&&this.removeOverkillDamage&&i.currentHp<0&&(i.damage=i.damage+i.currentHp),0===i.skillId&&0!==i.skillEffectId&&(i.skillId=i.skillEffectId,i.skillName=i.skillEffect),i.skillName in s.skills||(s.skills[i.skillName]=t({},{id:0,name:"",totalDamage:0,maxDamage:0,hits:{casts:0,total:0,crit:0,backAttack:0,frontAttack:0,counter:0},breakdown:[]},{id:i.skillId,name:i.skillName}));const a=15&i.damageModifier,r=(i.damageModifier>>4&7)-1;if("Bleed"===i.skillName&&i.damage>1e7)return;if("Bleed"===i.skillName&&a===C.HIT_FLAG_DAMAGE_SHARE)return;const o=a===C.HIT_FLAG_CRITICAL||a===C.HIT_FLAG_DOT_CRITICAL,h=r===w.HIT_OPTION_BACK_ATTACK,l=r===w.HIT_OPTION_FRONTAL_ATTACK,m=o?1:0,d=h?1:0,c=l?1:0;s.skills[i.skillName].totalDamage+=i.damage,i.damage>s.skills[i.skillName].maxDamage&&(s.skills[i.skillName].maxDamage=i.damage),s.damageDealt+=i.damage,n.damageTaken+=i.damage,"Bleed"!==i.skillName&&(s.hits.total+=1,s.hits.crit+=m,s.hits.backAttack+=d,s.hits.frontAttack+=c,s.skills[i.skillName].hits.total+=1,s.skills[i.skillName].hits.crit+=m,s.skills[i.skillName].hits.backAttack+=d,s.skills[i.skillName].hits.frontAttack+=c),s.isPlayer&&(this.game.damageStatistics.totalDamageDealt+=i.damage,this.game.damageStatistics.topDamageDealt=Math.max(this.game.damageStatistics.topDamageDealt,s.damageDealt),s.skills[i.skillName].breakdown.push({timestamp:+i.timestamp,damage:i.damage,targetEntity:n.id,isCrit:o,isBackAttack:h,isFrontAttack:l})),n.isPlayer&&(this.game.damageStatistics.totalDamageTaken+=i.damage,this.game.damageStatistics.topDamageTaken=Math.max(this.game.damageStatistics.topDamageTaken,n.damageTaken)),0===this.game.fightStartedOn&&(this.game.fightStartedOn=+i.timestamp),this.game.lastCombatPacket=+i.timestamp}onHeal(e){const t=new E(e);this.debugLines&&this.emit("log",{type:"debug",message:`onHeal: ${t.id}, ${t.name}, ${t.healAmount}`});let i="";for(const e of this.healSources)if(e.expires>=+t.timestamp){i=e.source;break}i&&(this.updateEntity(i,{name:i}),this.game.entities[i].healingDone+=t.healAmount,this.game.entities[i].isPlayer&&(this.game.damageStatistics.totalHealingDone+=t.healAmount,this.game.damageStatistics.topHealingDone=Math.max(this.game.damageStatistics.topHealingDone,this.game.entities[i].healingDone)))}onBuff(e){const t=new D(e);this.debugLines&&this.emit("log",{type:"debug",message:`onBuff: ${t.id}, ${t.name}, ${t.buffId}, ${t.buffName}, ${t.sourceId}, ${t.sourceName}, ${t.shieldAmount}`}),t.shieldAmount&&t.isNew&&(this.updateEntity(t.name,{name:t.name}),this.game.entities[t.name].shieldDone+=t.shieldAmount,this.game.entities[t.name].isPlayer&&(this.game.damageStatistics.totalShieldDone+=t.shieldAmount,this.game.damageStatistics.topShieldDone=Math.max(this.game.damageStatistics.topShieldDone,this.game.entities[t.name].shieldDone)))}onCounterattack(e){const t=new O(e);this.debugLines&&this.emit("log",{type:"debug",message:`onCounterattack: ${t.id}, ${t.name}`}),this.updateEntity(t.name,{name:t.name}),this.game.entities[t.name].hits.counter+=1}}export{x as LogParser};
//# sourceMappingURL=parser.modern.js.map
