{"version":3,"file":"log-lines.modern.js","sources":["../src/util.ts","../src/log-lines.ts"],"sourcesContent":["export function tryParseInt(intString: string, defaultValue = 0, radix = 10, float = false) {\n  if (typeof intString === \"number\") {\n    if (isNaN(intString)) return defaultValue;\n    return intString;\n  }\n\n  let intNum: number;\n\n  try {\n    intNum = float ? parseFloat(intString) : parseInt(intString, radix);\n    if (isNaN(intNum)) intNum = defaultValue;\n  } catch {\n    intNum = defaultValue;\n  }\n\n  return intNum;\n}\n","import { tryParseInt } from \"./util\";\n\nclass LogLine {\n  lineSplit: string[];\n  timestamp: Date;\n\n  constructor(lineSplit: string[]) {\n    this.lineSplit = lineSplit;\n    this.timestamp = new Date(this.lineSplit[1]);\n  }\n}\n\n// logId = 0\nexport class LogMessage extends LogLine {\n  message: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.message = this.lineSplit[2];\n  }\n}\n\n// logId = 1\nexport class LogInitEnv extends LogLine {\n  playerId: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.playerId = lineSplit[2];\n  }\n}\n\n// logId = 2\nexport class LogPhaseTransition extends LogLine {\n  phaseCode: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.phaseCode = tryParseInt(lineSplit[2]);\n  }\n}\n\n// logId = 3\nexport class LogNewPc extends LogLine {\n  id: string;\n  name: string;\n  classId: number;\n  class: string;\n  gearScore: number;\n  currentHp: number;\n  maxHp: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.classId = tryParseInt(lineSplit[4]);\n    this.class = lineSplit[5] || \"UnknownClass\";\n    /* this.level = tryParseInt(lineSplit[6]); */\n    this.gearScore = tryParseInt(lineSplit[7], 0, 10, true);\n    this.currentHp = tryParseInt(lineSplit[8]);\n    this.maxHp = tryParseInt(lineSplit[9]);\n  }\n}\n\n// logId = 4\nexport class LogNewNpc extends LogLine {\n  id: string;\n  npcId: number;\n  name: string;\n  currentHp: number;\n  maxHp: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.npcId = tryParseInt(lineSplit[3]);\n    this.name = lineSplit[4] || \"Unknown Entity\";\n    this.currentHp = tryParseInt(lineSplit[5]);\n    this.maxHp = tryParseInt(lineSplit[6]);\n  }\n}\n\n// logId = 5\nexport class LogDeath extends LogLine {\n  id: string;\n  name: string;\n  killerId: string;\n  killerName: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.killerId = lineSplit[4];\n    this.killerName = lineSplit[5] || \"Unknown Entity\";\n  }\n}\n\n// logId = 6\nexport class LogSkillStart extends LogLine {\n  id: string;\n  name: string;\n  skillId: number;\n  skillName: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.skillId = tryParseInt(lineSplit[4]);\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\n  }\n}\n\n// logId = 7\nexport class LogSkillStage extends LogLine {\n  id: string;\n  name: string;\n  skillId: string;\n  skillName: string;\n  skillStage: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.skillId = lineSplit[4];\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\n    this.skillStage = tryParseInt(lineSplit[6]);\n  }\n}\n\n// logId = 8\nexport class LogDamage extends LogLine {\n  id: string;\n  name: string;\n  skillId: number;\n  skillName: string;\n  skillEffectId: number;\n  skillEffect: string;\n  targetId: string;\n  targetName: string;\n  damage: number;\n  damageModifier: number;\n  currentHp: number;\n  maxHp: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.skillId = tryParseInt(lineSplit[4]);\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\n    this.skillEffectId = tryParseInt(lineSplit[6]);\n    this.skillEffect = lineSplit[7];\n    this.targetId = lineSplit[8];\n    this.targetName = lineSplit[9] || \"Unknown Entity\";\n    this.damage = tryParseInt(lineSplit[10]);\n    this.damageModifier = tryParseInt(lineSplit[11], 0, 16);\n    this.currentHp = tryParseInt(lineSplit[12]);\n    this.maxHp = tryParseInt(lineSplit[13]);\n  }\n}\n\n// logId = 9\nexport class LogHeal extends LogLine {\n  id: string;\n  name: string;\n  healAmount: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.healAmount = tryParseInt(lineSplit[4]);\n    //this.currentHp = tryParseInt(lineSplit[5]);\n  }\n}\n\n// logId = 10\nexport class LogBuff extends LogLine {\n  id: string;\n  name: string;\n  buffId: string;\n  buffName: string;\n  isNew: boolean;\n  sourceId: string;\n  sourceName: string;\n  shieldAmount: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.buffId = lineSplit[4];\n    this.buffName = lineSplit[5];\n    this.isNew = lineSplit[6] == \"1\";\n    this.sourceId = lineSplit[7];\n    this.sourceName = lineSplit[8] || \"Unknown Entity\";\n    this.shieldAmount = tryParseInt(lineSplit[9]);\n  }\n}\n\n// logId = 11\nexport class LogCounterattack extends LogLine {\n  id: string;\n  name: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    /* this.targetId = lineSplit[4];\n    this.targetName = lineSplit[5] || \"Unknown Entity\"; */\n  }\n}\n"],"names":["tryParseInt","intString","defaultValue","radix","float","isNaN","intNum","parseFloat","parseInt","_unused","LogLine","constructor","lineSplit","this","timestamp","Date","super","message","playerId","LogPhaseTransition","phaseCode","LogNewPc","id","name","classId","class","gearScore","currentHp","maxHp","LogNewNpc","npcId","LogDeath","killerId","killerName","LogSkillStart","skillId","skillName","skillStage","skillEffectId","skillEffect","targetId","targetName","damage","damageModifier","LogHeal","healAmount","LogBuff","buffId","buffName","isNew","sourceId","sourceName","shieldAmount","LogCounterattack"],"mappings":"AAAgBA,SAAAA,EAAYC,EAAmBC,EAAe,EAAGC,EAAQ,GAAIC,GAAQ,GACnF,GAAyB,iBAArBH,EACF,OAAII,MAAMJ,GAAYC,EAEvBD,EAED,IAAIK,EAEJ,IACEA,EAASF,EAAQG,WAAWN,GAAaO,SAASP,EAAWE,GACzDE,MAAMC,KAASA,EAASJ,EAG7B,CAFC,MAAAO,GACAH,EAASJ,CACV,CAED,OACDI,CAAA,CCdD,MAAaI,EAIXC,YAAYC,QAHZA,eAG+B,EAAAC,KAF/BC,eAGE,EAAAD,KAAKD,UAAYA,EACjBC,KAAKC,UAAY,IAAAC,KAASF,KAAKD,UAAU,GAC1C,EAIG,gBAA0BF,EAG9BC,YAAYC,GACVI,MAAMJ,GADuBC,KAF/BI,eAKEJ,KAAKI,QAAUJ,KAAKD,UAAU,EAC/B,EAIG,gBAA0BF,EAG9BC,YAAYC,GACVI,MAAMJ,GADuBC,KAF/BK,gBAKEL,KAAKK,SAAWN,EAAU,EAC3B,EAIUO,MAAAA,UAAkCT,EAG7CC,YAAYC,GACVI,MAAMJ,GADuBC,KAF/BO,eAE+B,EAG7BP,KAAKO,UAAYpB,EAAYY,EAAU,GACxC,QAIGS,YASJV,YAAYC,GACVI,MAAMJ,GADuBC,KAR/BS,QAQ+B,EAAAT,KAP/BU,UACAC,EAAAA,KAAAA,oBACAC,WAK+B,EAAAZ,KAJ/Ba,eAI+B,EAAAb,KAH/Bc,eAG+B,EAAAd,KAF/Be,WAKE,EAAAf,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKW,QAAUxB,EAAYY,EAAU,IACrCC,KAAKY,MAAQb,EAAU,IAAM,eAE7BC,KAAKa,UAAY1B,EAAYY,EAAU,GAAI,EAAG,IAAI,GAClDC,KAAKc,UAAY3B,EAAYY,EAAU,IACvCC,KAAKe,MAAQ5B,EAAYY,EAAU,GACpC,EAIUiB,MAAAA,UAAyBnB,EAOpCC,YAAYC,GACVI,MAAMJ,GADuBC,KAN/BS,eACAQ,WAK+B,EAAAjB,KAJ/BU,UACAI,EAAAA,KAAAA,eACAC,EAAAA,KAAAA,WAKE,EAAAf,KAAKS,GAAKV,EAAU,GACpBC,KAAKiB,MAAQ9B,EAAYY,EAAU,IACnCC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKc,UAAY3B,EAAYY,EAAU,IACvCC,KAAKe,MAAQ5B,EAAYY,EAAU,GACpC,EAIUmB,MAAAA,UAAwBrB,EAMnCC,YAAYC,GACVI,MAAMJ,GADuBC,KAL/BS,QAK+B,EAAAT,KAJ/BU,UACAS,EAAAA,KAAAA,qBACAC,gBAE+B,EAG7BpB,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKmB,SAAWpB,EAAU,GAC1BC,KAAKoB,WAAarB,EAAU,IAAM,gBACnC,EAIG,MAAAsB,YAMJvB,YAAYC,GACVI,MAAMJ,GADuBC,KAL/BS,QAK+B,EAAAT,KAJ/BU,UACAY,EAAAA,KAAAA,aACAC,EAAAA,KAAAA,eAKE,EAAAvB,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKsB,QAAUnC,EAAYY,EAAU,IACrCC,KAAKuB,UAAYxB,EAAU,IAAM,eAClC,EAIG,gBAA6BF,EAOjCC,YAAYC,GACVI,MAAMJ,GADuBC,KAN/BS,QACAC,EAAAA,KAAAA,iBACAY,aAI+B,EAAAtB,KAH/BuB,eACAC,EAAAA,KAAAA,gBAKE,EAAAxB,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKsB,QAAUvB,EAAU,GACzBC,KAAKuB,UAAYxB,EAAU,IAAM,gBACjCC,KAAKwB,WAAarC,EAAYY,EAAU,GACzC,EAIG,gBAAyBF,EAc7BC,YAAYC,GACVI,MAAMJ,GADuBC,KAb/BS,QACAC,EAAAA,KAAAA,UACAY,EAAAA,KAAAA,aACAC,EAAAA,KAAAA,sBACAE,mBAS+B,EAAAzB,KAR/B0B,iBAQ+B,EAAA1B,KAP/B2B,cAO+B,EAAA3B,KAN/B4B,gBACAC,EAAAA,KAAAA,YACAC,EAAAA,KAAAA,oBACAhB,EAAAA,KAAAA,sBACAC,WAE+B,EAG7Bf,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKsB,QAAUnC,EAAYY,EAAU,IACrCC,KAAKuB,UAAYxB,EAAU,IAAM,gBACjCC,KAAKyB,cAAgBtC,EAAYY,EAAU,IAC3CC,KAAK0B,YAAc3B,EAAU,GAC7BC,KAAK2B,SAAW5B,EAAU,GAC1BC,KAAK4B,WAAa7B,EAAU,IAAM,iBAClCC,KAAK6B,OAAS1C,EAAYY,EAAU,KACpCC,KAAK8B,eAAiB3C,EAAYY,EAAU,IAAK,EAAG,IACpDC,KAAKc,UAAY3B,EAAYY,EAAU,KACvCC,KAAKe,MAAQ5B,EAAYY,EAAU,IACpC,EAIUgC,MAAAA,UAAgBlC,EAK3BC,YAAYC,GACVI,MAAMJ,GADuBC,KAJ/BS,QACAC,EAAAA,KAAAA,iBACAsB,gBAE+B,EAG7BhC,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKgC,WAAa7C,EAAYY,EAAU,GAEzC,QAIGkC,UAA8BpC,EAUlCC,YAAYC,GACVI,MAAMJ,GADuBC,KAT/BS,QAS+B,EAAAT,KAR/BU,UAQ+B,EAAAV,KAP/BkC,YAO+B,EAAAlC,KAN/BmC,cACAC,EAAAA,KAAAA,WACAC,EAAAA,KAAAA,cACAC,EAAAA,KAAAA,uBACAC,kBAE+B,EAG7BvC,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,iBAC5BC,KAAKkC,OAASnC,EAAU,GACxBC,KAAKmC,SAAWpC,EAAU,GAC1BC,KAAKoC,MAAwB,KAAhBrC,EAAU,GACvBC,KAAKqC,SAAWtC,EAAU,GAC1BC,KAAKsC,WAAavC,EAAU,IAAM,iBAClCC,KAAKuC,aAAepD,EAAYY,EAAU,GAC3C,EAIG,MAAAyC,YAIJ1C,YAAYC,GACVI,MAAMJ,GADuBC,KAH/BS,QAG+B,EAAAT,KAF/BU,UAKE,EAAAV,KAAKS,GAAKV,EAAU,GACpBC,KAAKU,KAAOX,EAAU,IAAM,gBAG7B"}