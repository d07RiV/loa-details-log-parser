{"version":3,"file":"log-lines.modern.js","sources":["../src/util.ts","../src/log-lines.ts"],"sourcesContent":["export function tryParseInt(intString: string, defaultValue = 0, radix = 10) {\n  if (typeof intString === \"number\") {\n    if (isNaN(intString)) return defaultValue;\n    return intString;\n  }\n\n  let intNum: number;\n\n  try {\n    intNum = parseInt(intString, radix);\n    if (isNaN(intNum)) intNum = defaultValue;\n  } catch {\n    intNum = defaultValue;\n  }\n\n  return intNum;\n}\n","import { tryParseInt } from \"./util.js\";\n\nclass LogLine {\n  lineSplit: string[];\n  timestamp: Date;\n\n  constructor(lineSplit: string[]) {\n    this.lineSplit = lineSplit;\n    this.timestamp = new Date(this.lineSplit[1]);\n  }\n}\n\n// logId = 0\nexport class LogMessage extends LogLine {\n  message: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.message = this.lineSplit[2];\n  }\n}\n\n// logId = 1\nexport class LogInitEnv extends LogLine {\n  playerId: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.playerId = lineSplit[2];\n  }\n}\n\n// logId = 2\nexport class LogPhaseTransition extends LogLine {\n  phaseCode: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.phaseCode = tryParseInt(lineSplit[2]);\n  }\n}\n\n// logId = 3\nexport class LogNewPc extends LogLine {\n  id: string;\n  name: string;\n  classId: number;\n  class: string;\n  gearScore: string;\n  currentHp: number;\n  maxHp: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.classId = tryParseInt(lineSplit[4]);\n    this.class = lineSplit[5] || \"UnknownClass\";\n    /* this.level = tryParseInt(lineSplit[6]); */\n    this.gearScore = lineSplit[7];\n    this.currentHp = tryParseInt(lineSplit[8]);\n    this.maxHp = tryParseInt(lineSplit[9]);\n  }\n}\n\n// logId = 4\nexport class LogNewNpc extends LogLine {\n  id: string;\n  name: string;\n  currentHp: number;\n  maxHp: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    //this.npcId = tryParseInt(lineSplit[3]);\n    this.name = lineSplit[4] || \"Unknown Entity\";\n    this.currentHp = tryParseInt(lineSplit[5]);\n    this.maxHp = tryParseInt(lineSplit[6]);\n  }\n}\n\n// logId = 5\nexport class LogDeath extends LogLine {\n  id: string;\n  name: string;\n  killerId: string;\n  killerName: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.killerId = lineSplit[4];\n    this.killerName = lineSplit[5] || \"Unknown Entity\";\n  }\n}\n\n// logId = 6\nexport class LogSkillStart extends LogLine {\n  id: string;\n  name: string;\n  skillId: string;\n  skillName: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.skillId = lineSplit[4];\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\n  }\n}\n\n// logId = 7\nexport class LogSkillStage extends LogLine {\n  id: string;\n  name: string;\n  skillId: string;\n  skillName: string;\n  skillStage: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.skillId = lineSplit[4];\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\n    this.skillStage = tryParseInt(lineSplit[6]);\n  }\n}\n\n// logId = 8\nexport class LogDamage extends LogLine {\n  id: string;\n  name: string;\n  skillId: number;\n  skillName: string;\n  skillEffectId: number;\n  skillEffect: string;\n  targetId: string;\n  targetName: string;\n  damage: number;\n  damageModifier: number;\n  currentHp: number;\n  maxHp: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.skillId = tryParseInt(lineSplit[4]);\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\n    this.skillEffectId = tryParseInt(lineSplit[6]);\n    this.skillEffect = lineSplit[7];\n    this.targetId = lineSplit[8];\n    this.targetName = lineSplit[9] || \"Unknown Entity\";\n    this.damage = tryParseInt(lineSplit[10]);\n    this.damageModifier = tryParseInt(lineSplit[11], 0, 16);\n    this.currentHp = tryParseInt(lineSplit[12]);\n    this.maxHp = tryParseInt(lineSplit[13]);\n  }\n}\n\n// logId = 9\nexport class LogHeal extends LogLine {\n  id: string;\n  name: string;\n  healAmount: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.healAmount = tryParseInt(lineSplit[4]);\n    //this.currentHp = tryParseInt(lineSplit[5]);\n  }\n}\n\n// logId = 10\nexport class LogBuff extends LogLine {\n  id: string;\n  name: string;\n  buffId: string;\n  buffName: string;\n  isNew: boolean;\n  sourceId: string;\n  sourceName: string;\n  shieldAmount: number;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    this.buffId = lineSplit[4];\n    this.buffName = lineSplit[5];\n    this.isNew = lineSplit[6] == \"1\";\n    this.sourceId = lineSplit[7];\n    this.sourceName = lineSplit[8] || \"Unknown Entity\";\n    this.shieldAmount = tryParseInt(lineSplit[9]);\n  }\n}\n\n// logId = 11\nexport class LogCounterattack extends LogLine {\n  id: string;\n  name: string;\n\n  constructor(lineSplit: string[]) {\n    super(lineSplit);\n\n    this.id = lineSplit[2];\n    this.name = lineSplit[3] || \"Unknown Entity\";\n    /* this.targetId = lineSplit[4];\n    this.targetName = lineSplit[5] || \"Unknown Entity\"; */\n  }\n}\n"],"names":["tryParseInt","intString","defaultValue","radix","isNaN","intNum","parseInt","_unused","LogLine","constructor","lineSplit","this","timestamp","Date","super","message","LogInitEnv","playerId","LogPhaseTransition","phaseCode","LogNewPc","id","name","classId","class","gearScore","currentHp","maxHp","LogNewNpc","LogDeath","killerId","killerName","skillId","skillName","LogSkillStage","skillStage","LogDamage","skillEffectId","skillEffect","targetId","targetName","damage","damageModifier","LogHeal","healAmount","buffId","buffName","isNew","sourceId","sourceName","shieldAmount","LogCounterattack"],"mappings":"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"}