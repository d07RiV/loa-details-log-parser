import e from"dayjs";import t from"lodash/cloneDeep.js";import i from"events";import{v4 as a}from"uuid";import n from"fs";import s from"path";import r from"dayjs/plugin/customParseFormat.js";function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(e[a]=i[a])}return e},o.apply(this,arguments)}function m(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,l(e,t)}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}function h(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}function d(e,t){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return(i=i.call(e)).next.bind(i);if(Array.isArray(e)||(i=function(e,t){if(e){if("string"==typeof e)return h(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?h(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function g(e,t,i){if(void 0===t&&(t=0),void 0===i&&(i=10),"number"==typeof e)return isNaN(e)?t:e;var a;try{a=parseInt(e,i),isNaN(a)&&(a=t)}catch(e){a=t}return a}var u,c=function(e){this.lineSplit=void 0,this.timestamp=void 0,this.lineSplit=e,this.timestamp=new Date(this.lineSplit[1])},v=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).message=void 0,i.message=i.lineSplit[2],i}return m(t,e),t}(c),p=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).phaseCode=void 0,i.phaseCode=g(t[2]),i}return m(t,e),t}(c),f=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.classId=void 0,i.class=void 0,i.gearScore=void 0,i.currentHp=void 0,i.maxHp=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.classId=g(t[4]),i.class=t[5]||"UnknownClass",i.gearScore=t[7],i.currentHp=g(t[8]),i.maxHp=g(t[9]),i}return m(t,e),t}(c),T=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.currentHp=void 0,i.maxHp=void 0,i.id=t[2],i.name=t[4]||"Unknown Entity",i.currentHp=g(t[5]),i.maxHp=g(t[6]),i}return m(t,e),t}(c),k=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.killerId=void 0,i.killerName=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.killerId=t[4],i.killerName=t[5]||"Unknown Entity",i}return m(t,e),t}(c),I=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.skillId=void 0,i.skillName=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.skillId=t[4],i.skillName=t[5]||"Unknown Skill",i}return m(t,e),t}(c),_=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.skillId=void 0,i.skillName=void 0,i.skillStage=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.skillId=t[4],i.skillName=t[5]||"Unknown Skill",i.skillStage=g(t[6]),i}return m(t,e),t}(c),A=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.skillId=void 0,i.skillName=void 0,i.skillEffectId=void 0,i.skillEffect=void 0,i.targetId=void 0,i.targetName=void 0,i.damage=void 0,i.damageModifier=void 0,i.currentHp=void 0,i.maxHp=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.skillId=g(t[4]),i.skillName=t[5]||"Unknown Skill",i.skillEffectId=g(t[6]),i.skillEffect=t[7],i.targetId=t[8],i.targetName=t[9]||"Unknown Entity",i.damage=g(t[10]),i.damageModifier=g(t[11],0,16),i.currentHp=g(t[12]),i.maxHp=g(t[13]),i}return m(t,e),t}(c),H=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.healAmount=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.healAmount=g(t[4]),i}return m(t,e),t}(c),S=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.buffId=void 0,i.buffName=void 0,i.isNew=void 0,i.sourceId=void 0,i.sourceName=void 0,i.shieldAmount=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i.buffId=t[4],i.buffName=t[5],i.isNew="1"==t[6],i.sourceId=t[7],i.sourceName=t[8]||"Unknown Entity",i.shieldAmount=g(t[9]),i}return m(t,e),t}(c),y=/*#__PURE__*/function(e){function t(t){var i;return(i=e.call(this,t)||this).id=void 0,i.name=void 0,i.id=t[2],i.name=t[3]||"Unknown Entity",i}return m(t,e),t}(c),E={"Serenade of Salvation":{duration:3},"Holy Aura":{duration:16e3},"Holy Protection":{duration:7e3},Demonize:{duration:1500}};!function(e){e[e.HIT_FLAG_NORMAL=0]="HIT_FLAG_NORMAL",e[e.HIT_FLAG_CRITICAL=1]="HIT_FLAG_CRITICAL",e[e.HIT_FLAG_MISS=2]="HIT_FLAG_MISS",e[e.HIT_FLAG_INVINCIBLE=3]="HIT_FLAG_INVINCIBLE",e[e.HIT_FLAG_DOT=4]="HIT_FLAG_DOT",e[e.HIT_FLAG_IMMUNE=5]="HIT_FLAG_IMMUNE",e[e.HIT_FLAG_IMMUNE_SILENCED=6]="HIT_FLAG_IMMUNE_SILENCED",e[e.HIT_FLAG_FONT_SILENCED=7]="HIT_FLAG_FONT_SILENCED",e[e.HIT_FLAG_DOT_CRITICAL=8]="HIT_FLAG_DOT_CRITICAL",e[e.HIT_FLAG_DODGE=9]="HIT_FLAG_DODGE",e[e.HIT_FLAG_REFLECT=10]="HIT_FLAG_REFLECT",e[e.HIT_FLAG_DAMAGE_SHARE=11]="HIT_FLAG_DAMAGE_SHARE",e[e.HIT_FLAG_DODGE_HIT=12]="HIT_FLAG_DODGE_HIT",e[e.HIT_FLAG_MAX=13]="HIT_FLAG_MAX",e[e.HIT_OPTION_BACK_ATTACK=16]="HIT_OPTION_BACK_ATTACK",e[e.HIT_OPTION_FRONTAL_ATTACK=32]="HIT_OPTION_FRONTAL_ATTACK",e[e.HIT_OPTION_FLANK_ATTACK=64]="HIT_OPTION_FLANK_ATTACK"}(u||(u={}));var N=/*#__PURE__*/function(){function e(e){void 0===e&&(e=!1),this.eventEmitter=void 0,this.resetTimer=void 0,this.debugLines=void 0,this.isLive=void 0,this.dontResetOnZoneChange=void 0,this.resetAfterPhaseTransition=void 0,this.splitOnPhaseTransition=void 0,this.removeOverkillDamage=void 0,this.phaseTransitionResetRequest=void 0,this.phaseTransitionResetRequestTime=void 0,this.game=void 0,this.encounters=void 0,this.healSources=void 0,this.eventEmitter=new i,this.resetTimer=null,this.debugLines=!1,this.isLive=e,this.dontResetOnZoneChange=!1,this.resetAfterPhaseTransition=!1,this.splitOnPhaseTransition=!1,this.removeOverkillDamage=!0,this.phaseTransitionResetRequest=!1,this.phaseTransitionResetRequestTime=0,this.resetState(),this.encounters=[],this.isLive&&setInterval(this.broadcastStateChange.bind(this),100)}var a=e.prototype;return a.resetState=function(){this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"Resetting state"});var e=+new Date;this.game={startedOn:e,lastCombatPacket:e,fightStartedOn:0,entities:{},damageStatistics:{totalDamageDealt:0,topDamageDealt:0,totalDamageTaken:0,topDamageTaken:0,totalHealingDone:0,topHealingDone:0,totalShieldDone:0,topShieldDone:0,targetMaximumHealth:0,targetCurrentHealth:0}},this.healSources=[],this.eventEmitter.emit("reset-state")},a.softReset=function(){this.resetTimer=null;var e=t(this.game.entities);this.resetState();for(var i=0,a=Object.keys(e);i<a.length;i++){var n=a[i];+new Date-e[n].lastUpdate>6e5||this.updateEntity(e[n].name,{name:e[n].name,class:e[n].class,isPlayer:e[n].isPlayer,gearScore:e[n].gearScore,maxHp:e[n].maxHp,currentHp:e[n].currentHp})}},a.cancelReset=function(){this.resetTimer&&clearTimeout(this.resetTimer),this.resetTimer=null},a.splitEncounter=function(){var e=t(this.game);0==e.fightStartedOn||0==e.damageStatistics.totalDamageDealt&&!e.damageStatistics.totalDamageTaken||this.encounters.push(e),this.resetState()},a.broadcastStateChange=function(){this.eventEmitter.emit("state-change",this.game)},a.parseLogLine=function(e){if(e){var t=e.trim().split("|");if(!(t.length<1)&&t[0]){var i=g(t[0]);try{switch(i){case 0:this.onMessage(t);break;case 1:this.onInitEnv();break;case 2:this.onPhaseTransition(t);break;case 3:this.onNewPc(t);break;case 4:this.onNewNpc(t);break;case 5:this.onDeath(t);break;case 6:this.onSkillStart(t);break;case 7:this.onSkillStage(t);break;case 8:this.onDamage(t);break;case 9:this.onHeal(t);break;case 10:this.onBuff(t);break;case 11:this.onCounterattack(t)}}catch(e){this.eventEmitter.emit("log",{type:"error",message:e})}}}},a.updateEntity=function(e,t){var i={lastUpdate:+new Date};this.game.entities[e]=o({},e in this.game.entities?this.game.entities[e]:{lastUpdate:0,id:"",name:"",class:"",isPlayer:!1,isDead:!1,deathTime:0,gearScore:"",currentHp:0,maxHp:0,damageDealt:0,healingDone:0,shieldDone:0,damageTaken:0,skills:{},hits:{total:0,crit:0,backAttack:0,frontAttack:0,counter:0}},t,i)},a.onMessage=function(e){var t=new v(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onMessage: "+t.message}),t.message.startsWith("Arguments:")||this.eventEmitter.emit("message",t.message)},a.onInitEnv=function(){this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onInitEnv"}),this.isLive?!1===this.dontResetOnZoneChange&&null==this.resetTimer&&(this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"Setting a reset timer"}),this.resetTimer=setTimeout(this.softReset.bind(this),6e3),this.eventEmitter.emit("message","new-zone")):(this.splitEncounter(),this.eventEmitter.emit("message","new-zone"))},a.onPhaseTransition=function(e){var t=new p(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onPhaseTransition: "+t.phaseCode}),this.isLive&&(this.eventEmitter.emit("message","phase-transition-"+t.phaseCode),this.resetAfterPhaseTransition&&(this.phaseTransitionResetRequest=!0,this.phaseTransitionResetRequestTime=+new Date)),!this.isLive&&this.splitOnPhaseTransition&&this.splitEncounter()},a.onNewPc=function(e){var t=new f(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onNewPc: "+t.id+", "+t.name+", "+t.classId+", "+t.class+", "+t.gearScore+", "+t.currentHp+", "+t.maxHp}),this.updateEntity(t.name,o({name:t.name,class:t.class,isPlayer:!0},t.gearScore&&"0"!=t.gearScore&&{gearScore:t.gearScore},{currentHp:t.currentHp,maxHp:t.maxHp}))},a.onNewNpc=function(e){var t=new T(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onNewNpc: "+t.id+", "+t.name+", "+t.currentHp+", "+t.maxHp}),this.updateEntity(t.name,{name:t.name,isPlayer:!1,currentHp:t.currentHp,maxHp:t.maxHp})},a.onDeath=function(e){var t=new k(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onDeath: "+t.name+" "+t.killerName}),this.updateEntity(t.name,{name:t.name,isDead:!0,deathTime:t.timestamp.getTime()})},a.onSkillStart=function(e){var t=new I(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onSkillStart: "+t.id+", "+t.name+", "+t.skillId+", "+t.skillName}),Object.keys(E).includes(t.skillName)&&this.healSources.push({source:t.name,expires:+t.timestamp+E[t.skillName].duration}),this.updateEntity(t.name,{name:t.name,isDead:!1})},a.onSkillStage=function(e){var t=new _(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onSkillStage: "+t.name+", "+t.skillId+", "+t.skillName+", "+t.skillStage})},a.onDamage=function(e){if(!(e.length<13)){var t=new A(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onDamage: "+t.id+", "+t.name+", "+t.skillId+", "+t.skillName+", "+t.skillEffectId+", "+t.skillEffect+", "+t.targetId+", "+t.targetName+", "+t.damage+", "+t.currentHp+", "+t.maxHp}),this.phaseTransitionResetRequest&&this.phaseTransitionResetRequestTime>0&&this.phaseTransitionResetRequestTime<+new Date-1500&&(this.softReset(),this.phaseTransitionResetRequest=!1),this.updateEntity(t.name,{name:t.name}),this.updateEntity(t.targetName,{name:t.targetName,currentHp:t.currentHp,maxHp:t.maxHp});var i=this.game.entities[t.name],a=this.game.entities[t.targetName];if(!a.isPlayer&&this.removeOverkillDamage&&t.currentHp<0&&(t.damage=t.damage+t.currentHp),t.skillName in this.game.entities[t.name].skills||(this.game.entities[t.name].skills[t.skillName]=o({},{name:"",totalDamage:0,maxDamage:0,hits:{total:0,crit:0,backAttack:0,frontAttack:0,counter:0}},{name:t.skillName})),!("Bleed"===t.skillName&&t.damage>1e7||"Bleed"===t.skillName&&11===t.damageModifier)){var n=(t.damageModifier&(u.HIT_FLAG_CRITICAL|u.HIT_FLAG_DOT_CRITICAL))>0?1:0,s=(t.damageModifier&u.HIT_OPTION_BACK_ATTACK)>0?1:0,r=(t.damageModifier&u.HIT_OPTION_FRONTAL_ATTACK)>0?1:0;this.game.entities[t.name].skills[t.skillName].totalDamage+=t.damage,t.damage>this.game.entities[t.name].skills[t.skillName].maxDamage&&(this.game.entities[t.name].skills[t.skillName].maxDamage=t.damage),this.game.entities[t.name].damageDealt+=t.damage,this.game.entities[t.targetName].damageTaken+=t.damage,"Bleed"!==t.skillName&&(this.game.entities[t.name].hits.total+=1,this.game.entities[t.name].hits.crit+=n,this.game.entities[t.name].hits.backAttack+=s,this.game.entities[t.name].hits.frontAttack+=r,this.game.entities[t.name].skills[t.skillName].hits.total+=1,this.game.entities[t.name].skills[t.skillName].hits.crit+=n,this.game.entities[t.name].skills[t.skillName].hits.backAttack+=s,this.game.entities[t.name].skills[t.skillName].hits.frontAttack+=r),i.isPlayer&&(this.game.damageStatistics.totalDamageDealt+=t.damage,this.game.damageStatistics.topDamageDealt=Math.max(this.game.damageStatistics.topDamageDealt,i.damageDealt),this.game.damageStatistics.targetMaximumHealth=t.maxHp,this.game.damageStatistics.targetCurrentHealth=t.currentHp),a.isPlayer&&(this.game.damageStatistics.totalDamageTaken+=t.damage,this.game.damageStatistics.topDamageTaken=Math.max(this.game.damageStatistics.topDamageTaken,a.damageTaken)),0===this.game.fightStartedOn&&(this.game.fightStartedOn=+t.timestamp),this.game.lastCombatPacket=+t.timestamp}}},a.onHeal=function(e){var t=new H(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onHeal: "+t.id+", "+t.name+", "+t.healAmount});for(var i,a="",n=d(this.healSources);!(i=n()).done;){var s=i.value;if(s.expires>=+t.timestamp){a=s.source;break}}a&&(this.updateEntity(a,{name:a}),this.game.entities[a].healingDone+=t.healAmount,this.game.entities[a].isPlayer&&(this.game.damageStatistics.totalHealingDone+=t.healAmount,this.game.damageStatistics.topHealingDone=Math.max(this.game.damageStatistics.topHealingDone,this.game.entities[a].healingDone)))},a.onBuff=function(e){var t=new S(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onBuff: "+t.id+", "+t.name+", "+t.buffId+", "+t.buffName+", "+t.sourceId+", "+t.sourceName+", "+t.shieldAmount}),t.shieldAmount&&t.isNew&&(this.updateEntity(t.name,{name:t.name}),this.game.entities[t.name].shieldDone+=t.shieldAmount,this.game.entities[t.name].isPlayer&&(this.game.damageStatistics.totalShieldDone+=t.shieldAmount,this.game.damageStatistics.topShieldDone=Math.max(this.game.damageStatistics.topShieldDone,this.game.entities[t.name].shieldDone)))},a.onCounterattack=function(e){var t=new y(e);this.debugLines&&this.eventEmitter.emit("log",{type:"debug",message:"onCounterattack: "+t.id+", "+t.name}),this.updateEntity(t.name,{name:t.name}),this.game.entities[t.name].hits.counter+=1},e}();function b(e,t,i,r,m){try{var l=e.slice(0,-4),h=l+".json",g=n.readFileSync(s.join(i,e),"utf-8");if(!g)return m(null,"empty log");var u=new N(!1);!0===t&&(u.splitOnPhaseTransition=!0);for(var c,v=d(g.split("\n").filter(function(e){return null!=e&&""!=e}));!(c=v()).done;)u.parseLogLine(c.value);u.splitEncounter();var p=u.encounters;if(p.length>0){for(var f,T={encounters:[]},k=d(p);!(f=k()).done;){var I=f.value,_=I.lastCombatPacket-I.fightStartedOn;if(!(_<=1e3)){for(var A={name:"",damageTaken:0,isPlayer:!1},H=0,S=Object.values(I.entities);H<S.length;H++){var y=S[H];y.damageTaken>A.damageTaken&&(A={name:y.name,damageTaken:y.damageTaken,isPlayer:y.isPlayer})}var E={duration:_,mostDamageTakenEntity:A},b=a(),D=l+"_"+b+"_encounter.json";T.encounters.push(o({encounterId:b,encounterFile:D},E)),n.writeFileSync(s.join(r,D),JSON.stringify(o({},I,E)))}}return n.writeFileSync(s.join(r,h),JSON.stringify(T)),m(null,"log parsed")}return m(null,"no encounters found")}catch(e){return m(e,"log parser error")}}e.extend(r);export{b as default};
//# sourceMappingURL=file-parser-worker.module.js.map
