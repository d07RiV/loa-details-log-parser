import e from"dayjs";import{cloneDeep as t}from"lodash";import{v4 as i}from"uuid";import s from"fs";import n from"path";import a from"dayjs/plugin/customParseFormat";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&(e[s]=i[s])}return e},r.apply(this,arguments)}var o,l="object"==typeof Reflect?Reflect:null,h=l&&"function"==typeof l.apply?l.apply:function(e,t,i){return Function.prototype.apply.call(e,t,i)};o=l&&"function"==typeof l.ownKeys?l.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var m=Number.isNaN||function(e){return e!=e};function c(){c.init.call(this)}var d=c;c.EventEmitter=c,c.prototype._events=void 0,c.prototype._eventsCount=0,c.prototype._maxListeners=void 0;var u=10;function g(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function p(e){return void 0===e._maxListeners?c.defaultMaxListeners:e._maxListeners}function f(e,t,i,s){var n,a,r;if(g(i),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,i.listener?i.listener:i),a=e._events),r=a[t]),void 0===r)r=a[t]=i,++e._eventsCount;else if("function"==typeof r?r=a[t]=s?[i,r]:[r,i]:s?r.unshift(i):r.push(i),(n=p(e))>0&&r.length>n&&!r.warned){r.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+r.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=e,o.type=t,o.count=r.length,console&&console.warn&&console.warn(o)}return e}function v(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function k(e,t,i){var s={fired:!1,wrapFn:void 0,target:e,type:t,listener:i},n=v.bind(s);return n.listener=i,s.wrapFn=n,n}function T(e,t,i){var s=e._events;if(void 0===s)return[];var n=s[t];return void 0===n?[]:"function"==typeof n?i?[n.listener||n]:[n]:i?function(e){for(var t=new Array(e.length),i=0;i<t.length;++i)t[i]=e[i].listener||e[i];return t}(n):I(n,n.length)}function _(e){var t=this._events;if(void 0!==t){var i=t[e];if("function"==typeof i)return 1;if(void 0!==i)return i.length}return 0}function I(e,t){for(var i=new Array(t),s=0;s<t;++s)i[s]=e[s];return i}function y(e,t,i,s){if("function"==typeof e.on)s.once?e.once(t,i):e.on(t,i);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,function n(a){s.once&&e.removeEventListener(t,n),i(a)})}}function L(e,t=0,i=10,s=!1){if("number"==typeof e)return isNaN(e)?t:e;let n;try{n=s?parseFloat(e):parseInt(e,i),isNaN(n)&&(n=t)}catch(e){n=t}return n}Object.defineProperty(c,"defaultMaxListeners",{enumerable:!0,get:function(){return u},set:function(e){if("number"!=typeof e||e<0||m(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");u=e}}),c.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},c.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||m(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},c.prototype.getMaxListeners=function(){return p(this)},c.prototype.emit=function(e){for(var t=[],i=1;i<arguments.length;i++)t.push(arguments[i]);var s="error"===e,n=this._events;if(void 0!==n)s=s&&void 0===n.error;else if(!s)return!1;if(s){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var r=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw r.context=a,r}var o=n[e];if(void 0===o)return!1;if("function"==typeof o)h(o,this,t);else{var l=o.length,m=I(o,l);for(i=0;i<l;++i)h(m[i],this,t)}return!0},c.prototype.on=c.prototype.addListener=function(e,t){return f(this,e,t,!1)},c.prototype.prependListener=function(e,t){return f(this,e,t,!0)},c.prototype.once=function(e,t){return g(t),this.on(e,k(this,e,t)),this},c.prototype.prependOnceListener=function(e,t){return g(t),this.prependListener(e,k(this,e,t)),this},c.prototype.off=c.prototype.removeListener=function(e,t){var i,s,n,a,r;if(g(t),void 0===(s=this._events))return this;if(void 0===(i=s[e]))return this;if(i===t||i.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,i.listener||t));else if("function"!=typeof i){for(n=-1,a=i.length-1;a>=0;a--)if(i[a]===t||i[a].listener===t){r=i[a].listener,n=a;break}if(n<0)return this;0===n?i.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(i,n),1===i.length&&(s[e]=i[0]),void 0!==s.removeListener&&this.emit("removeListener",e,r||t)}return this},c.prototype.removeAllListeners=function(e){var t,i,s;if(void 0===(i=this._events))return this;if(void 0===i.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==i[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete i[e]),this;if(0===arguments.length){var n,a=Object.keys(i);for(s=0;s<a.length;++s)"removeListener"!==(n=a[s])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=i[e]))this.removeListener(e,t);else if(void 0!==t)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this},c.prototype.listeners=function(e){return T(this,e,!0)},c.prototype.rawListeners=function(e){return T(this,e,!1)},c.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):_.call(e,t)},c.prototype.listenerCount=_,c.prototype.eventNames=function(){return this._eventsCount>0?o(this._events):[]},d.once=function(e,t){return new Promise(function(i,s){function n(i){e.removeListener(t,a),s(i)}function a(){"function"==typeof e.removeListener&&e.removeListener("error",n),i([].slice.call(arguments))}y(e,t,a,{once:!0}),"error"!==t&&function(e,t,i){"function"==typeof e.on&&y(e,"error",t,{once:!0})}(e,n)})};class A{constructor(e){this.lineSplit=void 0,this.timestamp=void 0,this.lineSplit=e,this.timestamp=new Date(this.lineSplit[1])}}class N extends A{constructor(e){super(e),this.message=void 0,this.message=this.lineSplit[2]}}class b extends A{constructor(e){super(e),this.phaseCode=void 0,this.phaseCode=L(e[2])}}class H extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.classId=void 0,this.class=void 0,this.gearScore=void 0,this.currentHp=void 0,this.maxHp=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.classId=L(e[4]),this.class=e[5]||"UnknownClass",this.gearScore=L(e[7],0,10,!0),this.currentHp=L(e[8]),this.maxHp=L(e[9])}}class E extends A{constructor(e){super(e),this.id=void 0,this.npcId=void 0,this.name=void 0,this.currentHp=void 0,this.maxHp=void 0,this.id=e[2],this.npcId=L(e[3]),this.name=e[4]||"Unknown Entity",this.currentHp=L(e[5]),this.maxHp=L(e[6])}}class S extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.killerId=void 0,this.killerName=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.killerId=e[4],this.killerName=e[5]||"Unknown Entity"}}class O extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.skillId=void 0,this.skillName=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.skillId=L(e[4]),this.skillName=e[5]||"Unknown Skill"}}class D extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.skillId=void 0,this.skillName=void 0,this.skillStage=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.skillId=e[4],this.skillName=e[5]||"Unknown Skill",this.skillStage=L(e[6])}}class w extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.skillId=void 0,this.skillName=void 0,this.skillEffectId=void 0,this.skillEffect=void 0,this.targetId=void 0,this.targetName=void 0,this.damage=void 0,this.damageModifier=void 0,this.currentHp=void 0,this.maxHp=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.skillId=L(e[4]),this.skillName=e[5]||"Unknown Skill",this.skillEffectId=L(e[6]),this.skillEffect=e[7],this.targetId=e[8],this.targetName=e[9]||"Unknown Entity",this.damage=L(e[10]),this.damageModifier=L(e[11],0,16),this.currentHp=L(e[12]),this.maxHp=L(e[13])}}class C extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.healAmount=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.healAmount=L(e[4])}}class x extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.buffId=void 0,this.buffName=void 0,this.isNew=void 0,this.sourceId=void 0,this.sourceName=void 0,this.shieldAmount=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity",this.buffId=e[4],this.buffName=e[5],this.isNew="1"==e[6],this.sourceId=e[7],this.sourceName=e[8]||"Unknown Entity",this.shieldAmount=L(e[9])}}class F extends A{constructor(e){super(e),this.id=void 0,this.name=void 0,this.id=e[2],this.name=e[3]||"Unknown Entity"}}const P={"Serenade of Salvation":{duration:3},"Holy Aura":{duration:16e3},"Holy Protection":{duration:7e3},Demonize:{duration:1500}};var R,$;!function(e){e[e.HIT_OPTION_NONE=-1]="HIT_OPTION_NONE",e[e.HIT_OPTION_BACK_ATTACK=0]="HIT_OPTION_BACK_ATTACK",e[e.HIT_OPTION_FRONTAL_ATTACK=1]="HIT_OPTION_FRONTAL_ATTACK",e[e.HIT_OPTION_FLANK_ATTACK=2]="HIT_OPTION_FLANK_ATTACK",e[e.HIT_OPTION_MAX=3]="HIT_OPTION_MAX"}(R||(R={})),function(e){e[e.HIT_FLAG_NORMAL=0]="HIT_FLAG_NORMAL",e[e.HIT_FLAG_CRITICAL=1]="HIT_FLAG_CRITICAL",e[e.HIT_FLAG_MISS=2]="HIT_FLAG_MISS",e[e.HIT_FLAG_INVINCIBLE=3]="HIT_FLAG_INVINCIBLE",e[e.HIT_FLAG_DOT=4]="HIT_FLAG_DOT",e[e.HIT_FLAG_IMMUNE=5]="HIT_FLAG_IMMUNE",e[e.HIT_FLAG_IMMUNE_SILENCED=6]="HIT_FLAG_IMMUNE_SILENCED",e[e.HIT_FLAG_FONT_SILENCED=7]="HIT_FLAG_FONT_SILENCED",e[e.HIT_FLAG_DOT_CRITICAL=8]="HIT_FLAG_DOT_CRITICAL",e[e.HIT_FLAG_DODGE=9]="HIT_FLAG_DODGE",e[e.HIT_FLAG_REFLECT=10]="HIT_FLAG_REFLECT",e[e.HIT_FLAG_DAMAGE_SHARE=11]="HIT_FLAG_DAMAGE_SHARE",e[e.HIT_FLAG_DODGE_HIT=12]="HIT_FLAG_DODGE_HIT",e[e.HIT_FLAG_MAX=13]="HIT_FLAG_MAX"}($||($={}));class G extends d.EventEmitter{constructor(e=!1){super(),this.resetTimer=void 0,this.debugLines=void 0,this.isLive=void 0,this.dontResetOnZoneChange=void 0,this.resetAfterPhaseTransition=void 0,this.splitOnPhaseTransition=void 0,this.removeOverkillDamage=void 0,this.phaseTransitionResetRequest=void 0,this.phaseTransitionResetRequestTime=void 0,this.game=void 0,this.encounters=void 0,this.healSources=void 0,this.resetTimer=null,this.debugLines=!1,this.isLive=e,this.dontResetOnZoneChange=!1,this.resetAfterPhaseTransition=!1,this.splitOnPhaseTransition=!1,this.removeOverkillDamage=!0,this.phaseTransitionResetRequest=!1,this.phaseTransitionResetRequestTime=0,this.resetState(),this.encounters=[],this.isLive&&setInterval(this.broadcastStateChange.bind(this),100)}resetState(){this.debugLines&&this.emit("log",{type:"debug",message:"Resetting state"});const e=t(this.game),i=+new Date;this.game={startedOn:i,lastCombatPacket:i,fightStartedOn:0,entities:{},damageStatistics:{totalDamageDealt:0,topDamageDealt:0,totalDamageTaken:0,topDamageTaken:0,totalHealingDone:0,topHealingDone:0,totalShieldDone:0,topShieldDone:0}},this.healSources=[],this.emit("reset-state",e)}softReset(){this.resetTimer=null;const e=t(this.game.entities);this.resetState();for(const t of Object.keys(e))+new Date-e[t].lastUpdate>6e5||this.updateEntity(e[t].name,{name:e[t].name,npcId:e[t].npcId,class:e[t].class,classId:e[t].classId,isPlayer:e[t].isPlayer,gearScore:e[t].gearScore,maxHp:e[t].maxHp,currentHp:e[t].currentHp})}cancelReset(){this.resetTimer&&clearTimeout(this.resetTimer),this.resetTimer=null}splitEncounter(){const e=t(this.game);0==e.fightStartedOn||0==e.damageStatistics.totalDamageDealt&&!e.damageStatistics.totalDamageTaken||this.encounters.push(e),this.resetState()}broadcastStateChange(){const e=t(this.game);Object.values(e.entities).forEach(e=>{Object.values(e.skills).forEach(e=>{e.breakdown=[]})}),this.emit("state-change",e)}parseLogLine(e){if(!e)return;const t=e.trim().split("|");if(t.length<1||!t[0])return;const i=L(t[0]);try{switch(i){case 0:this.onMessage(t);break;case 1:this.onInitEnv();break;case 2:this.onPhaseTransition(t);break;case 3:this.onNewPc(t);break;case 4:this.onNewNpc(t);break;case 5:this.onDeath(t);break;case 6:this.onSkillStart(t);break;case 7:this.onSkillStage(t);break;case 8:this.onDamage(t);break;case 9:this.onHeal(t);break;case 10:this.onBuff(t);break;case 12:this.onCounterattack(t)}}catch(e){this.emit("log",{type:"error",message:e})}}updateEntity(e,t){const i={},s=this.game.entities[e];!t.currentHp||s&&t.currentHp===s.currentHp||(i.lastUpdate=+new Date),this.game.entities[e]=r({},s||{lastUpdate:0,id:"",npcId:0,name:"",class:"",classId:0,isPlayer:!1,isDead:!1,deaths:0,deathTime:0,gearScore:0,currentHp:0,maxHp:0,damageDealt:0,healingDone:0,shieldDone:0,damageTaken:0,skills:{},hits:{casts:0,total:0,crit:0,backAttack:0,frontAttack:0,counter:0}},t,i)}onMessage(e){const t=new N(e);this.debugLines&&this.emit("log",{type:"debug",message:`onMessage: ${t.message}`}),t.message.startsWith("Arguments:")||this.emit("message",t.message)}onInitEnv(){this.debugLines&&this.emit("log",{type:"debug",message:"onInitEnv"}),this.isLive?!1===this.dontResetOnZoneChange&&null==this.resetTimer&&(this.debugLines&&this.emit("log",{type:"debug",message:"Setting a reset timer"}),this.resetTimer=setTimeout(this.softReset.bind(this),6e3),this.emit("message","new-zone")):(this.splitEncounter(),this.emit("message","new-zone"))}onPhaseTransition(e){const t=new b(e);this.debugLines&&this.emit("log",{type:"debug",message:`onPhaseTransition: ${t.phaseCode}`}),this.isLive&&(this.emit("message",`phase-transition-${t.phaseCode}`),this.resetAfterPhaseTransition&&(this.phaseTransitionResetRequest=!0,this.phaseTransitionResetRequestTime=+new Date)),!this.isLive&&this.splitOnPhaseTransition&&this.splitEncounter()}onNewPc(e){const t=new H(e);this.debugLines&&this.emit("log",{type:"debug",message:`onNewPc: ${t.id}, ${t.name}, ${t.classId}, ${t.class}, ${t.gearScore}, ${t.currentHp}, ${t.maxHp}`}),this.updateEntity(t.name,r({id:t.id,name:t.name,class:t.class,classId:t.classId,isPlayer:!0},t.gearScore&&0!=t.gearScore&&{gearScore:t.gearScore},{currentHp:t.currentHp,maxHp:t.maxHp}))}onNewNpc(e){const t=new E(e);this.debugLines&&this.emit("log",{type:"debug",message:`onNewNpc: ${t.id}, ${t.name}, ${t.currentHp}, ${t.maxHp}`}),this.updateEntity(t.name,{id:t.id,name:t.name,npcId:t.npcId,isPlayer:!1,currentHp:t.currentHp,maxHp:t.maxHp})}onDeath(e){const t=new S(e);this.debugLines&&this.emit("log",{type:"debug",message:`onDeath: ${t.name} ${t.killerName}`});const i=this.game.entities[t.name];let s=0;s=i?i.isDead?i.deaths:i.deaths+1:1,this.updateEntity(t.name,{name:t.name,isDead:!0,deathTime:+t.timestamp,deaths:s})}onSkillStart(e){const t=new O(e);this.debugLines&&this.emit("log",{type:"debug",message:`onSkillStart: ${t.id}, ${t.name}, ${t.skillId}, ${t.skillName}`}),Object.keys(P).includes(t.skillName)&&this.healSources.push({source:t.name,expires:+t.timestamp+P[t.skillName].duration}),this.updateEntity(t.name,{name:t.name,isDead:!1});const i=this.game.entities[t.name];i&&(i.hits.casts+=1,t.skillName in i.skills||(i.skills[t.skillName]=r({},{id:0,name:"",totalDamage:0,maxDamage:0,hits:{casts:0,total:0,crit:0,backAttack:0,frontAttack:0,counter:0},breakdown:[]},{id:t.skillId,name:t.skillName}),i.skills[t.skillName].hits.casts+=1))}onSkillStage(e){const t=new D(e);this.debugLines&&this.emit("log",{type:"debug",message:`onSkillStage: ${t.name}, ${t.skillId}, ${t.skillName}, ${t.skillStage}`})}onDamage(e){if(e.length<13)return;const t=new w(e);this.debugLines&&this.emit("log",{type:"debug",message:`onDamage: ${t.id}, ${t.name}, ${t.skillId}, ${t.skillName}, ${t.skillEffectId}, ${t.skillEffect}, ${t.targetId}, ${t.targetName}, ${t.damage}, ${t.currentHp}, ${t.maxHp}`}),this.phaseTransitionResetRequest&&this.phaseTransitionResetRequestTime>0&&this.phaseTransitionResetRequestTime<+new Date-1500&&(this.softReset(),this.phaseTransitionResetRequest=!1),this.updateEntity(t.name,{id:t.id,name:t.name}),this.updateEntity(t.targetName,{id:t.targetId,name:t.targetName,currentHp:t.currentHp,maxHp:t.maxHp});const i=this.game.entities[t.name],s=this.game.entities[t.targetName];!s.isPlayer&&this.removeOverkillDamage&&t.currentHp<0&&(t.damage=t.damage+t.currentHp),0===t.skillId&&0!==t.skillEffectId&&(t.skillId=t.skillEffectId,t.skillName=t.skillEffect),t.skillName in i.skills||(i.skills[t.skillName]=r({},{id:0,name:"",totalDamage:0,maxDamage:0,hits:{casts:0,total:0,crit:0,backAttack:0,frontAttack:0,counter:0},breakdown:[]},{id:t.skillId,name:t.skillName}));const n=15&t.damageModifier,a=(t.damageModifier>>4&7)-1;if("Bleed"===t.skillName&&t.damage>1e7)return;if("Bleed"===t.skillName&&n===$.HIT_FLAG_DAMAGE_SHARE)return;const o=n===$.HIT_FLAG_CRITICAL||n===$.HIT_FLAG_DOT_CRITICAL,l=a===R.HIT_OPTION_BACK_ATTACK,h=a===R.HIT_OPTION_FRONTAL_ATTACK,m=o?1:0,c=l?1:0,d=h?1:0;i.skills[t.skillName].totalDamage+=t.damage,t.damage>i.skills[t.skillName].maxDamage&&(i.skills[t.skillName].maxDamage=t.damage),i.damageDealt+=t.damage,s.damageTaken+=t.damage,"Bleed"!==t.skillName&&(i.hits.total+=1,i.hits.crit+=m,i.hits.backAttack+=c,i.hits.frontAttack+=d,i.skills[t.skillName].hits.total+=1,i.skills[t.skillName].hits.crit+=m,i.skills[t.skillName].hits.backAttack+=c,i.skills[t.skillName].hits.frontAttack+=d),i.isPlayer&&(this.game.damageStatistics.totalDamageDealt+=t.damage,this.game.damageStatistics.topDamageDealt=Math.max(this.game.damageStatistics.topDamageDealt,i.damageDealt),i.skills[t.skillName].breakdown.push({timestamp:+t.timestamp,damage:t.damage,targetEntity:s.id,isCrit:o,isBackAttack:l,isFrontAttack:h})),s.isPlayer&&(this.game.damageStatistics.totalDamageTaken+=t.damage,this.game.damageStatistics.topDamageTaken=Math.max(this.game.damageStatistics.topDamageTaken,s.damageTaken)),0===this.game.fightStartedOn&&(this.game.fightStartedOn=+t.timestamp),this.game.lastCombatPacket=+t.timestamp}onHeal(e){const t=new C(e);this.debugLines&&this.emit("log",{type:"debug",message:`onHeal: ${t.id}, ${t.name}, ${t.healAmount}`});let i="";for(const e of this.healSources)if(e.expires>=+t.timestamp){i=e.source;break}i&&(this.updateEntity(i,{name:i}),this.game.entities[i].healingDone+=t.healAmount,this.game.entities[i].isPlayer&&(this.game.damageStatistics.totalHealingDone+=t.healAmount,this.game.damageStatistics.topHealingDone=Math.max(this.game.damageStatistics.topHealingDone,this.game.entities[i].healingDone)))}onBuff(e){const t=new x(e);this.debugLines&&this.emit("log",{type:"debug",message:`onBuff: ${t.id}, ${t.name}, ${t.buffId}, ${t.buffName}, ${t.sourceId}, ${t.sourceName}, ${t.shieldAmount}`}),t.shieldAmount&&t.isNew&&(this.updateEntity(t.name,{name:t.name}),this.game.entities[t.name].shieldDone+=t.shieldAmount,this.game.entities[t.name].isPlayer&&(this.game.damageStatistics.totalShieldDone+=t.shieldAmount,this.game.damageStatistics.topShieldDone=Math.max(this.game.damageStatistics.topShieldDone,this.game.entities[t.name].shieldDone)))}onCounterattack(e){const t=new F(e);this.debugLines&&this.emit("log",{type:"debug",message:`onCounterattack: ${t.id}, ${t.name}`}),this.updateEntity(t.name,{name:t.name}),this.game.entities[t.name].hits.counter+=1}}function M(e,t,a,o,l){try{const h=e.slice(0,-4),m=h+".json",c=s.readFileSync(n.join(a,e),"utf-8");if(!c)return l(null,"empty log");const d=new G(!1);!0===t&&(d.splitOnPhaseTransition=!0);const u=c.split("\n").filter(e=>null!=e&&""!=e);for(const e of u)d.parseLogLine(e);d.splitEncounter();const g=d.encounters;if(g.length>0){const e={encounters:[]};for(const t of g){const a=t.lastCombatPacket-t.fightStartedOn;if(a<=1e3)continue;let l={name:"",damageTaken:0,isPlayer:!1};for(const e of Object.values(t.entities))e.damageTaken>l.damageTaken&&(l={name:e.name,damageTaken:e.damageTaken,isPlayer:e.isPlayer});const m={duration:a,mostDamageTakenEntity:l},c=i(),d=`${h}_${c}_encounter.json`;e.encounters.push(r({encounterId:c,encounterFile:d},m)),s.writeFileSync(n.join(o,d),JSON.stringify(r({},t,m)))}return s.writeFileSync(n.join(o,m),JSON.stringify(e)),l(null,"log parsed")}return l(null,"no encounters found")}catch(e){return l(e,"log parser error")}}e.extend(a);export{M as default};
//# sourceMappingURL=file-parser-worker.modern.js.map
